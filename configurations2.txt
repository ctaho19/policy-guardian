WITH LATEST_TIMESTAMP AS (
    SELECT MAX(SF_LOAD_TIMESTAMP) AS LATEST_TS
    FROM OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
),
BASE_RANKED_RECORDS AS (
    SELECT *,
    ROW_NUMBER() OVER (
        PARTITION BY ACCOUNT_NUMBER, REGION, ASV, RESOURCE_TYPE 
        ORDER BY BATCH_ID DESC
    ) AS RANK
    FROM OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
    AND CLOUD_PROVIDER = 'AWS'
    AND ROLE_TYPE IN ('', 'N/A', 'MACHINE')
    AND CONTROL_ID = '<your_control_id>'
    AND LOWER(REGION) IN ('ca-central-1', 'eu-west-1', 'eu-west-2', 'us-east-1', 'us-east-2', 'us-west-2', 'global')
),
-- Debug CTE to check component counts
COMPONENT_DEBUG AS (
    SELECT 
        ASV,
        ACCOUNT_NUMBER,
        REGION,
        RESOURCE_TYPE,
        COUNT(DISTINCT CONTROL_COMPONENT) as COMPONENT_COUNT,
        SUM(TOTAL_EVALUATIONS_COUNT) as TOTAL_EVALS_BEFORE_AVG
    FROM BASE_RANKED_RECORDS
    WHERE RANK = 1
    GROUP BY ASV, ACCOUNT_NUMBER, REGION, RESOURCE_TYPE
),
COMPONENT_EVALUATIONS AS (
    SELECT 
        ASV,
        ACCOUNT_NUMBER,
        REGION,
        RESOURCE_TYPE,
        CONTROL_COMPONENT,
        SUM(TOTAL_EVALUATIONS_COUNT) as COMPONENT_EVAL_COUNT
    FROM BASE_RANKED_RECORDS
    WHERE RANK = 1
    GROUP BY 
        ASV,
        ACCOUNT_NUMBER,
        REGION,
        RESOURCE_TYPE,
        CONTROL_COMPONENT
),
-- Debug CTE to check averages
AVERAGE_DEBUG AS (
    SELECT 
        'Average Analysis' as DEBUG_TYPE,
        COUNT(*) as TOTAL_GROUPS,
        SUM(COMPONENT_EVAL_COUNT) as TOTAL_BEFORE_AVG,
        AVG(COMPONENT_EVAL_COUNT) as AVG_ACROSS_ALL
    FROM COMPONENT_EVALUATIONS
),
AVERAGED_EVALUATIONS AS (
    SELECT 
        ASV,
        ACCOUNT_NUMBER,
        REGION,
        RESOURCE_TYPE,
        ROUND(AVG(COMPONENT_EVAL_COUNT)) as AVG_EVAL_COUNT
    FROM COMPONENT_EVALUATIONS
    GROUP BY 
        ASV,
        ACCOUNT_NUMBER,
        REGION,
        RESOURCE_TYPE
)
-- Output debug information first
SELECT * FROM COMPONENT_DEBUG WHERE COMPONENT_COUNT > 1
UNION ALL
SELECT * FROM AVERAGE_DEBUG
-- Then proceed with your regular metrics calculation
