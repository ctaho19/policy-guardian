-- Get all IAM roles
WITH All_IAM_Roles AS (
    SELECT
        RESOURCE_ID,
        AMAZON_RESOURCE_NAME,
        BA,
        ACCOUNT
    FROM
        EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_IAM_RESOURCE
    WHERE
        TYPE = 'role'
),

-- Assign known ROLE_TYPEs based on patterns
Role_Type_Assigned AS (
    SELECT
        iam.*,
        rtp.ROLE_TYPE
    FROM
        All_IAM_Roles iam
    LEFT JOIN
        EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_ROLE_TYPE_PATTERNS_STREAM_V2 rtp
    ON
        iam.AMAZON_RESOURCE_NAME LIKE rtp.PATTERN
)

-- Assign MACHINE to roles with NULL ROLE_TYPE (unmatched patterns)
SELECT
    *,
    CASE
        WHEN ROLE_TYPE IS NULL THEN 'MACHINE'
        ELSE ROLE_TYPE
    END AS ASSIGNED_ROLE_TYPE
FROM
    Role_Type_Assigned;

SELECT
    CONTROL_ID,
    CONTROL_DESCRIPTION
FROM
    EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_CONTROL_METADATA_STREAM_1_V2
WHERE
    APPLICABLE_AWS_ROLE_TYPES LIKE '%MACHINE%';

-- Continue from Step 1

-- Filter for MACHINE roles
Machine_IAM_Roles AS (
    SELECT
        RESOURCE_ID,
        AMAZON_RESOURCE_NAME,
        BA,
        ACCOUNT,
        ASSIGNED_ROLE_TYPE
    FROM
        (Result from Step 1)
    WHERE
        ASSIGNED_ROLE_TYPE = 'MACHINE'
)
SELECT
    COUNT(DISTINCT RESOURCE_ID) AS Total_Machine_Roles
FROM
    Machine_IAM_Roles;


Evaluated_Machine_Roles AS (
    SELECT DISTINCT
        RESOURCE_NAME AS AMAZON_RESOURCE_NAME
    FROM
        EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_CONTROLS_VIOLATIONS_STREAM_V2
    WHERE
        CONTROL_ID = 'CM-2.AWS.12.v02'
        AND ROLE_TYPE = 'MACHINE'
)

-- Join Evaluated Roles with Machine IAM Roles
Evaluated_Machine_IAM_Roles AS (
    SELECT
        m.*
    FROM
        Machine_IAM_Roles m
    INNER JOIN
        Evaluated_Machine_Roles e
    ON
        m.AMAZON_RESOURCE_NAME = e.AMAZON_RESOURCE_NAME
)
SELECT
    COUNT(DISTINCT RESOURCE_ID) AS Evaluated_Machine_Roles
FROM
    Evaluated_Machine_IAM_Roles;
