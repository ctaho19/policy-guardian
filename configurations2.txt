import xml.etree.ElementTree as ET
from difflib import SequenceMatcher
import sys

# Function to extract apps from Mac XML
def extract_mac_apps(xml_file):
    apps = set()
    try:
        tree = ET.parse(xml_file)
        root = tree.getroot()

        # Extract all apps from ApplicationGroupOSX
        for app_group in root.findall('.//ApplicationGroupOSX'):
            for app in app_group.findall('.//ApplicationOSX'):
                app_name = app.get('FileName', '').lower()
                desc = app.get('Description', '').lower()
                if app_name and app_name != '*':
                    apps.add(app_name)
                elif desc and 'any' not in desc:
                    apps.add(desc)
        return apps
    except ET.ParseError as e:
        print(f"Error parsing Mac XML {xml_file}: {e}")
        return set()

# Function to extract apps from Windows XML
def extract_windows_apps(xml_file):
    apps = set()
    try:
        tree = ET.parse(xml_file)
        root = tree.getroot()

        # Extract all apps from ApplicationGroup
        for app_group in root.findall('.//ApplicationGroup'):
            for app in app_group.findall('.//Application'):
                app_name = app.get('FileName', '').lower()
                desc = app.get('Description', '').lower()
                if app_name and app_name != '*':
                    apps.add(app_name)
                elif desc and 'any' not in desc:
                    apps.add(desc)
        return apps
    except ET.ParseError as e:
        print(f"Error parsing Windows XML {xml_file}: {e}")
        return set()

# Partial match function
def is_partial_match(blocked_app, xml_app, threshold=0.75):
    return SequenceMatcher(None, blocked_app.lower(), xml_app.lower()).ratio() >= threshold

# Main comparison function
def compare_blocklist_with_xml(blocklist_file, windows_xml, mac_xml):
    # Read blocklist
    with open(blocklist_file, 'r') as f:
        blocklist = [line.strip().lower() for line in f if line.strip()]

    # Extract apps
    mac_apps = extract_mac_apps(mac_xml)
    windows_apps = extract_windows_apps(windows_xml)

    # Compare separately
    results = []
    for blocked_app in blocklist:
        mac_match = None
        windows_match = None
        
        for xml_app in mac_apps:
            if is_partial_match(blocked_app, xml_app):
                mac_match = xml_app
                break
        
        for xml_app in windows_apps:
            if is_partial_match(blocked_app, xml_app):
                windows_match = xml_app
                break
        
        results.append({
            'blocklist_app': blocked_app,
            'mac_match': mac_match,
            'windows_match': windows_match
        })

    # Output results
    print("\nBlocklist Validation Results:")
    print(f"{'Blocklist App':<30} {'Found in Mac XML':<30} {'Found in Windows XML':<30}")
    print("-" * 90)
    for result in results:
        mac_status = f"Yes ({result['mac_match']})" if result['mac_match'] else "No"
        windows_status = f"Yes ({result['windows_match']})" if result['windows_match'] else "No"
        print(f"{result['blocklist_app']:<30} {mac_status:<30} {windows_status:<30}")

    # Summary
    missing_mac = [r['blocklist_app'] for r in results if not r['mac_match']]
    missing_windows = [r['blocklist_app'] for r in results if not r['windows_match']]
    
    print("\nSummary:")
    print(f"Apps missing from Mac XML: {len(missing_mac)}")
    if missing_mac:
        print("  " + ", ".join(missing_mac))
    print(f"Apps missing from Windows XML: {len(missing_windows)}")
    if missing_windows:
        print("  " + ", ".join(missing_windows))

if __name__ == "__main__":
    if len(sys.argv) != 4:
        print("Usage: python script.py blocklist.txt windows.xml mac.xml")
        sys.exit(1)

    blocklist_file = sys.argv[1]
    windows_xml = sys.argv[2]
    mac_xml = sys.argv[3]

    compare_blocklist_with_xml(blocklist_file, windows_xml, mac_xml)

python3 script.py eapl.txt WinProductionPolicy-Green_v39_202503241210.xml MacProductionPolicy-Blue_v56_202503241210.xml
