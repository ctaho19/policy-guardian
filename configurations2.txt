-- Control Scope Validation
WITH CONTROL_SCOPE AS (
    SELECT 
        CONTROL_ID,
        APPLICABLE_AWS_ROLE_TYPES AS OFFICIAL_SCOPE,
        CONTROL_DESCRIPTION
    FROM EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_CONTROL_METADATA_STREAM_1_V2
    WHERE CONTROL_ID = 'CM-2.AWS.12.v02'
),

-- ASV-Based Machine Role Mapping
ASV_ROLE_MAPPING AS (
    SELECT 
        ACCOUNT_NUMBER,
        ASV,
        RESOURCE_TYPE,
        ROLE_TYPE,
        MAX(BATCH_ID) AS LATEST_BATCH
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE CONTROL_ID = 'CM-2.AWS.12.v02'
    AND RESOURCE_TYPE = 'AWS::IAM::Role'
    GROUP BY 1,2,3,4
),

-- True Machine Roles Identification
TRUE_MACHINE_ROLES AS (
    SELECT 
        iam.RESOURCE_ID,
        iam.AMAZON_RESOURCE_NAME,
        iam.ACCOUNT,
        iam.ASV
    FROM EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_IAM_RESOURCE iam
    INNER JOIN ASV_ROLE_MAPPING arm
        ON iam.ACCOUNT = arm.ACCOUNT_NUMBER
        AND iam.ASV = arm.ASV
    WHERE arm.ROLE_TYPE = 'MACHINE'
    AND iam.TYPE = 'role'
),

-- Evaluated Resources from Violations
EVALUATED_ROLES AS (
    SELECT DISTINCT RESOURCE_NAME
    FROM EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_CONTROLS_VIOLATIONS_STREAM_V2
    WHERE CONTROL_ID = 'CM-2.AWS.12.v02'
),

-- Coverage Analysis
COVERAGE_ANALYSIS AS (
    SELECT 
        tmr.RESOURCE_ID,
        tmr.AMAZON_RESOURCE_NAME,
        CASE WHEN er.RESOURCE_NAME IS NOT NULL THEN 1 ELSE 0 END AS IS_EVALUATED
    FROM TRUE_MACHINE_ROLES tmr
    LEFT JOIN EVALUATED_ROLES er
        ON tmr.AMAZON_RESOURCE_NAME = er.RESOURCE_NAME
)

-- Final Results
SELECT 
    (SELECT OFFICIAL_SCOPE FROM CONTROL_SCOPE) AS CONTROL_SCOPE,
    COUNT(*) AS TOTAL_MACHINE_ROLES,
    SUM(IS_EVALUATED) AS EVALUATED_COUNT,
    TOTAL_MACHINE_ROLES - EVALUATED_COUNT AS UNEVALUATED_GAP,
    ROUND(100.0 * EVALUATED_COUNT / NULLIF(TOTAL_MACHINE_ROLES, 0), 2) AS COVERAGE_PCT
FROM COVERAGE_ANALYSIS;

-- Compare with Tier 1 results
WITH TIER1_DATA AS (
    SELECT 
        DENOMINATOR AS TIER1_TOTAL,
        NUMERATOR AS TIER1_EVALUATED
    FROM TIER1_QUERY_RESULTS
)

SELECT 
    t1.TIER1_TOTAL,
    ca.TOTAL_MACHINE_ROLES AS TRUE_TOTAL,
    t1.TIER1_EVALUATED,
    ca.EVALUATED_COUNT AS TRUE_EVALUATED,
    ca.UNEVALUATED_GAP,
    ca.COVERAGE_PCT
FROM TIER1_DATA t1
CROSS JOIN COVERAGE_ANALYSIS ca;




