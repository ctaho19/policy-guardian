# Adapted supporting evidence query with additional IAM role filters
support_query = """
WITH 
  Violation_Raw AS (
      SELECT 
          RESOURCE_NAME,
          ROLE_TYPE,
          CREATE_DATE,
          ROW_NUMBER() OVER (PARTITION BY RESOURCE_NAME ORDER BY CREATE_DATE DESC) AS rn
      FROM EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_CONTROLS_VIOLATIONS_STREAM_V2
  ),
  Violation_Roles AS (
      SELECT RESOURCE_NAME, ROLE_TYPE
      FROM Violation_Raw
      WHERE rn = 1
  ),
  IAM_Roles AS (
      SELECT 
          RESOURCE_ID,
          AMAZON_RESOURCE_NAME,
          BA,
          ACCOUNT,
          CREATE_DATE,
          FULL_RECORD
      FROM EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_IAM_RESOURCE
      WHERE TYPE = 'role'
        AND AMAZON_RESOURCE_NAME LIKE 'arn:aws:iam::%role/%'
        -- Only include accounts from the API response
        AND ACCOUNT IN (SELECT accountNumber FROM accounts_view)
        -- Exclude roles with policy attachments that contain "DenyAll" or "QuarantinePolicy"
        AND NOT REGEXP_LIKE(FULL_RECORD, '.*(Deny[-]?All|QuarantinePolicy).*')
  ),
  Mapping AS (
      SELECT
          r.RESOURCE_ID,
          r.AMAZON_RESOURCE_NAME,
          r.BA,
          r.ACCOUNT,
          COALESCE(v.ROLE_TYPE, 'NOT FOUND') AS ASSIGNED_ROLE_TYPE,
          r.CREATE_DATE
      FROM IAM_Roles r
      LEFT JOIN Violation_Roles v
          ON r.AMAZON_RESOURCE_NAME = v.RESOURCE_NAME
      QUALIFY ROW_NUMBER() OVER (PARTITION BY r.AMAZON_RESOURCE_NAME ORDER BY r.CREATE_DATE DESC) = 1
  ),
  Evaluated_Roles AS (
      SELECT DISTINCT RESOURCE_NAME
      FROM EIAM_DB.PHDP_CYBR_IAM.IDENTITY_REPORTS_CONTROLS_VIOLATIONS_STREAM_V2
      WHERE CONTROL_ID = 'CM-2.AWS.12.v02'
  ),
  UnEvaluated AS (
      SELECT
          m.RESOURCE_ID,
          m.AMAZON_RESOURCE_NAME,
          m.BA,
          m.ACCOUNT,
          m.CREATE_DATE
      FROM Mapping m
      LEFT JOIN Evaluated_Roles er
          ON m.AMAZON_RESOURCE_NAME = er.RESOURCE_NAME
      WHERE m.ASSIGNED_ROLE_TYPE = 'MACHINE'
        AND er.RESOURCE_NAME IS NULL
  )
SELECT *
FROM UnEvaluated
UNION ALL
SELECT 
  'N/A' AS RESOURCE_ID,
  'No unevaluated machine roles found' AS AMAZON_RESOURCE_NAME,
  NULL AS BA,
  NULL AS ACCOUNT,
  NULL AS CREATE_DATE
WHERE NOT EXISTS (SELECT 1 FROM UnEvaluated)
"""

# Execute the adapted supporting evidence query
df_support = spark.sql(support_query)
df_support.show()

