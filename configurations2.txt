WITH LATEST_TIMESTAMP AS (
    SELECT MAX(SF_LOAD_TIMESTAMP) AS LATEST_TS
    FROM OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
),
BASE_RANKED_RECORDS AS (
    SELECT *,
    ROW_NUMBER() OVER (
        PARTITION BY ACCOUNT_NUMBER, REGION, ASV, RESOURCE_TYPE 
        ORDER BY BATCH_ID DESC
    ) AS RANK
    FROM OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
    AND CLOUD_PROVIDER = 'AWS'
    AND ROLE_TYPE IN ('', 'N/A', 'MACHINE')
    AND CONTROL_ID = '<your_control_id>'
    AND LOWER(REGION) IN ('ca-central-1', 'eu-west-1', 'eu-west-2', 'us-east-1', 'us-east-2', 'us-west-2', 'global')
),
COMPONENT_EVALUATIONS AS (
    SELECT 
        ASV,
        ACCOUNT_NUMBER,
        REGION,
        RESOURCE_TYPE,
        CONTROL_COMPONENT,
        COUNT(*) as RECORDS_PER_COMPONENT,
        SUM(TOTAL_EVALUATIONS_COUNT) as COMPONENT_EVAL_COUNT
    FROM BASE_RANKED_RECORDS
    WHERE RANK = 1
    GROUP BY 
        ASV,
        ACCOUNT_NUMBER,
        REGION,
        RESOURCE_TYPE,
        CONTROL_COMPONENT
),
GROUP_STATS AS (
    SELECT 
        ASV,
        ACCOUNT_NUMBER,
        REGION,
        RESOURCE_TYPE,
        COUNT(DISTINCT CONTROL_COMPONENT) as NUM_COMPONENTS,
        SUM(COMPONENT_EVAL_COUNT) as TOTAL_EVALS,
        AVG(COMPONENT_EVAL_COUNT) as AVG_EVAL_COUNT,
        MAX(COMPONENT_EVAL_COUNT) as MAX_EVAL_COUNT,
        MIN(COMPONENT_EVAL_COUNT) as MIN_EVAL_COUNT
    FROM COMPONENT_EVALUATIONS
    GROUP BY 
        ASV,
        ACCOUNT_NUMBER,
        REGION,
        RESOURCE_TYPE
)
SELECT 
    'DEBUG INFO' as SECTION,
    gs.ASV,
    gs.ACCOUNT_NUMBER,
    gs.REGION,
    gs.RESOURCE_TYPE,
    gs.NUM_COMPONENTS,
    gs.TOTAL_EVALS as EVALS_BEFORE_AVG,
    gs.AVG_EVAL_COUNT as EVALS_AFTER_AVG,
    ce.CONTROL_COMPONENT,
    ce.COMPONENT_EVAL_COUNT as COMPONENT_EVALS,
    brr.INVENTORY_COUNT
FROM GROUP_STATS gs
JOIN COMPONENT_EVALUATIONS ce 
    ON gs.ASV = ce.ASV 
    AND gs.ACCOUNT_NUMBER = ce.ACCOUNT_NUMBER
    AND gs.REGION = ce.REGION
    AND gs.RESOURCE_TYPE = ce.RESOURCE_TYPE
JOIN BASE_RANKED_RECORDS brr
    ON gs.ASV = brr.ASV 
    AND gs.ACCOUNT_NUMBER = brr.ACCOUNT_NUMBER
    AND gs.REGION = brr.REGION
    AND gs.RESOURCE_TYPE = brr.RESOURCE_TYPE
    AND brr.RANK = 1
WHERE gs.NUM_COMPONENTS > 1
ORDER BY gs.TOTAL_EVALS DESC, gs.ASV, gs.ACCOUNT_NUMBER, gs.REGION, gs.RESOURCE_TYPE
LIMIT 20;
