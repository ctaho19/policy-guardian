# Find resources that weren't mapped at all
unmapped_resources_df = All_Roles_DF.join(
    Mapping_Roles_DF,
    All_Roles_DF.Resource_ID == Mapping_Roles_DF.Resource_ID,
    "left_anti"  # Returns only the rows from All_Roles_DF that don't have matches
)

# Show count of unmapped resources
print(f"Total unmapped resources: {unmapped_resources_df.count()}")
display(unmapped_resources_df)


# Check if these unmapped resources exist in Distinct_Roles_DF
unmapped_validation_df = unmapped_resources_df.join(
    Distinct_Roles_DF,
    unmapped_resources_df.Resource_ID == Distinct_Roles_DF.Resource_ID,
    "left"
)

# Add a validation status column
unmapped_validation_with_status = unmapped_validation_df.withColumn(
    "Validation_Status",
    when(col("Role_Type").isNull(), "Truly Not Present in Role Type Dataset")
    .otherwise("Found in Role Type Dataset - Investigate Why Not Mapped")
)

# Show results
print("Validation of Unmapped Resources:")
display(unmapped_validation_with_status)

# Get counts by validation status
unmapped_validation_with_status.groupBy("Validation_Status").count().show()


# Find resources mapped as "Not Found"
not_found_roles_df = Mapping_Roles_DF.filter(
    col("Assigned_Role_Type") == "Not Found"
)

# Validate against Distinct_Roles_DF
not_found_validation_df = not_found_roles_df.join(
    Distinct_Roles_DF,
    not_found_roles_df.Resource_ID == Distinct_Roles_DF.Resource_ID,
    "left"
)

# Add validation status
not_found_validation_with_status = not_found_validation_df.withColumn(
    "Validation_Status",
    when(col("Role_Type").isNull(), "No Role Type Data Available")
    .when(col("Role_Type").isin(["HUMAN", "ENTERPRISE", "MACHINE", "SERVICE"]), 
          concat(lit("Role Type Found: "), col("Role_Type")))
    .otherwise("Unexpected Role Type Value")
)

# Show results
print("\nValidation of 'Not Found' Role Types:")
display(not_found_validation_with_status)

# Get counts by validation status
print("\nSummary of 'Not Found' Role Types:")
not_found_validation_with_status.groupBy("Validation_Status").count().show()

# Print overall summary
print("\nOverall Summary:")
print(f"Total Resources in Inventory: {All_Roles_DF.count()}")
print(f"Total Mapped Resources: {Mapping_Roles_DF.count()}")
print(f"Total Unmapped Resources: {unmapped_resources_df.count()}")
print(f"Total 'Not Found' Role Types: {not_found_roles_df.count()}")

# Distribution of Role Types in Mapping_Roles_DF
print("\nDistribution of Assigned Role Types:")
Mapping_Roles_DF.groupBy("Assigned_Role_Type").count().orderBy("count", ascending=False).show()
