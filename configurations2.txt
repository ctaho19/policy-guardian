-- Step 1: Group and sum evaluation counts by control component within each grouping
WITH COMPONENT_EVAL_SUMS AS (
    SELECT 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        CONTROL_COMPONENTS,
        SUM(TOTAL_EVALUATIONS_COUNT) AS COMPONENT_EVAL_SUM,  -- Sum evaluations within each component
        MAX(INVENTORY_COUNT) AS INVENTORY_COUNT  -- Inventory count is consistent per grouping
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
        AND CLOUD_PROVIDER = 'AWS'
        AND ROLE_TYPE IN ('', 'N/A', 'MACHINE')
        AND CONTROL_ID = '<your_control_id>'
        AND INVENTORY_COUNT > 0
        AND LOWER(REGION) IN ('ca-central-1', 'eu-west-1', 'eu-west-2', 'us-east-1', 'us-east-2', 'us-west-2', 'global')
        AND RESOURCE_TYPE IN (
            SELECT DISTINCT RESOURCE_TYPE
            FROM CLCN_DB.PHDP_CLOUD.LAZER_COMPONENETS_V03 LCOMP 
            JOIN CLCN_DB.PHDP_CLOUD.LAZER_CONTROLS_V03 LCTRL
            USING (CLOUD_CONTROL_VERSION_ID, BATCH_ID)
            WHERE LCTRL.BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.LAZER_CONTROLS_V03)
                AND ESCALATING
                AND PHASE = 'OPERATIONAL'
                AND RESOURCE_TYPE NOT ILIKE ''
        )
    GROUP BY 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        CONTROL_COMPONENTS
),

-- Step 2: Calculate average evaluation count per component type
COMPONENT_EVAL_AVGS AS (
    SELECT
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        CONTROL_COMPONENTS,
        COMPONENT_EVAL_SUM,
        COUNT(*) AS COMPONENT_RECORD_COUNT,  -- Count records within each component group
        COMPONENT_EVAL_SUM / COUNT(*) AS COMPONENT_EVAL_AVG,  -- Average within each component
        INVENTORY_COUNT
    FROM COMPONENT_EVAL_SUMS
    GROUP BY
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        CONTROL_COMPONENTS,
        COMPONENT_EVAL_SUM,
        INVENTORY_COUNT
),

-- Step 3: Calculate the average across all components for each grouping
RESOURCE_GROUP_AVGS AS (
    SELECT
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        AVG(COMPONENT_EVAL_AVG) AS DEFINITIVE_EVAL_COUNT,  -- Average across components
        MAX(INVENTORY_COUNT) AS INVENTORY_COUNT
    FROM COMPONENT_EVAL_AVGS
    GROUP BY
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE
)

-- Step 4: Calculate final metrics
SELECT
    SUM(DEFINITIVE_EVAL_COUNT) AS TOTAL_EVALUATED_RESOURCES,
    SUM(INVENTORY_COUNT) AS TOTAL_INVENTORY_RESOURCES,
    CASE 
        WHEN SUM(INVENTORY_COUNT) > 0 
        THEN SUM(DEFINITIVE_EVAL_COUNT) / SUM(INVENTORY_COUNT) 
        ELSE 0 
    END AS COVERAGE_RATIO
FROM RESOURCE_GROUP_AVGS;
