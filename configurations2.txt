import requests
import time

# Setup
url = "https://api.cloud.[company].com/internal-operations/cloud-service/aws-tooling/search-resource-configurations"
headers = {
    "Accept": "application/json;v=1.0",
    "Authorization": "Bearer your_actual_token_here",  # Replace with your token
    "Content-Type": "application/json"
}
payload = {
    "searchParameters": [{"resourceType": "AWS::KMS::Key"}],
    "responseFields": [
        "accountName", "accountResourceId", "amazonResourceName", "asvName",
        "awsAccountId", "awsRegion", "businessApplicationName",
        "environment", "resourceCreationTimestamp", "resourceId",
        "resourceType", "configurationList", "configuration.origin"
    ]
}
params = {"limit": 10000}  # URL parameter
next_record_key = ""

# Loop to get all pages
page = 1
while True:
    print(f"Fetching page {page} with nextRecordKey: '{next_record_key or 'None'}'")
    
    if next_record_key:
        payload["nextRecordKey"] = next_record_key
    
    response = requests.post(url, headers=headers, json=payload, params=params, verify=False)
    data = response.json()
    resources = data.get("resourceConfigurations", [])
    new_next_record_key = data.get("nextRecordKey", "")
    
    print(f"Got {len(resources)} resources, nextRecordKey: '{new_next_record_key or 'None'}'")
    
    if not new_next_record_key:  # Stop when blank
        print("All done!")
        break
    
    next_record_key = new_next_record_key
    page += 1
    time.sleep(0.5)  # Be nice to the API
