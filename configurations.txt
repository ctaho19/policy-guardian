-- Fixed query that properly aggregates instead of ranking
WITH LATEST_BATCH AS (
    SELECT MAX(BATCH_ID) AS BATCH_ID 
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
),
RESOURCE_TOTALS AS (
    SELECT 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        ROLE_TYPE,
        SUM(INVENTORY_COUNT) as TOTAL_RESOURCES,
        SUM(TOTAL_EVALUATIONS_COUNT) as EVALUATED_RESOURCES
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE BATCH_ID = (SELECT BATCH_ID FROM LATEST_BATCH)
    AND CONTROL_ID = 'AC-3.AWS.30.v02'
    AND RESOURCE_TYPE = 'AWS::IAM::Role'
    AND ROLE_TYPE = 'MACHINE'
    AND INVENTORY_COUNT >= 0
    GROUP BY 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        ROLE_TYPE
),
FINAL_TOTALS AS (
    SELECT 
        SUM(TOTAL_RESOURCES) as TOTAL_RESOURCES,
        SUM(EVALUATED_RESOURCES) as EVALUATED_RESOURCES
    FROM RESOURCE_TOTALS
)
SELECT 
    CURRENT_DATE AS DATE,
    'MNTR-XXXXX-T1' AS MONITORING_METRIC_NUMBER,
    ROUND(100.0 * EVALUATED_RESOURCES / NULLIF(TOTAL_RESOURCES, 0), 2) AS MONITORING_METRIC,
    CASE 
        WHEN (EVALUATED_RESOURCES / NULLIF(TOTAL_RESOURCES, 0)) >= 0.9 THEN 'GREEN'
        WHEN (EVALUATED_RESOURCES / NULLIF(TOTAL_RESOURCES, 0)) >= 0.8 THEN 'YELLOW'
        ELSE 'RED'
    END AS COMPLIANCE_STATUS,
    EVALUATED_RESOURCES AS NUMERATOR,
    TOTAL_RESOURCES AS DENOMINATOR
FROM FINAL_TOTALS;

-- Validation query
WITH CORRECT_TOTALS AS (
    SELECT 
        'CORRECT' as METHOD,
        COUNT(*) as RECORD_COUNT,
        SUM(INVENTORY_COUNT) as TOTAL_RESOURCES,
        SUM(TOTAL_EVALUATIONS_COUNT) as EVALUATED_RESOURCES
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
    AND CONTROL_ID = 'AC-3.AWS.30.v02'
    AND RESOURCE_TYPE = 'AWS::IAM::Role'
    AND ROLE_TYPE = 'MACHINE'
),
NEW_APPROACH AS (
    SELECT 
        'NEW' as METHOD,
        COUNT(*) as RECORD_COUNT,
        SUM(TOTAL_RESOURCES) as TOTAL_RESOURCES,
        SUM(EVALUATED_RESOURCES) as EVALUATED_RESOURCES
    FROM (
        SELECT 
            ACCOUNT_NUMBER,
            REGION,
            ASV,
            RESOURCE_TYPE,
            ROLE_TYPE,
            SUM(INVENTORY_COUNT) as TOTAL_RESOURCES,
            SUM(TOTAL_EVALUATIONS_COUNT) as EVALUATED_RESOURCES
        FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
        WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
        AND CONTROL_ID = 'AC-3.AWS.30.v02'
        AND RESOURCE_TYPE = 'AWS::IAM::Role'
        AND ROLE_TYPE = 'MACHINE'
        GROUP BY 
            ACCOUNT_NUMBER,
            REGION,
            ASV,
            RESOURCE_TYPE,
            ROLE_TYPE
    ) t
)
SELECT * FROM CORRECT_TOTALS
UNION ALL
SELECT * FROM NEW_APPROACH
ORDER BY METHOD;

