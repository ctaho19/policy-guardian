-- Combined query for all three tiers for CTRL-1074653
WITH 
-- Common CTEs
LATEST_BATCH AS (
    SELECT MAX(BATCH_ID) AS BATCH_ID 
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
),

-- Tier 1 calculations
COVERAGE_STATS AS (
    SELECT 
        SUM(INVENTORY_COUNT) AS TOTAL_RESOURCES,
        SUM(TOTAL_EVALUATIONS_COUNT) AS EVALUATED_RESOURCES
    FROM (
        SELECT *, 
               ROW_NUMBER() OVER (PARTITION BY ACCOUNT_NUMBER, REGION, ASV, RESOURCE_TYPE ORDER BY BATCH_ID DESC) AS RANK
        FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4 TC
        WHERE BATCH_ID = (SELECT BATCH_ID FROM LATEST_BATCH)
        AND CLOUD_PROVIDER = 'AWS'
        AND RESOURCE_TYPE = 'AWS::IAM::Role'
        AND ROLE_TYPE = 'MACHINE'
        AND INVENTORY_COUNT > 0
        AND LOWER(REGION) IN ('ca-central-1', 'eu-west-1', 'eu-west-2', 'us-east-1', 'us-east-2', 'us-west-2', 'global')
    ) a
    WHERE rank = 1
),

-- Tier 2 calculations
EVALUATED_RESOURCES AS (
    SELECT 
        SUM(TOTAL_EVALUATIONS_COUNT) as TOTAL_EVALUATED
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE BATCH_ID = (SELECT BATCH_ID FROM LATEST_BATCH)
    AND CONTROL_ID = 'AC-3.AWS.30.v02'
    AND RESOURCE_TYPE = 'AWS::IAM::Role'
    AND ROLE_TYPE = 'MACHINE'
),

NON_COMPLIANT_COUNT AS (
    SELECT 
        COUNT(DISTINCT nc.RESOURCE_ID) as TOTAL_NON_COMPLIANT
    FROM CLCN_DB.PHDP_CLOUD.OZONE_NON_COMPLIANT_RESOURCES_TCRD_VIEW_V01 nc
    WHERE nc.CONTROL_ID = 'AC-3.AWS.30.v02'
    AND nc.ID NOT IN (
        SELECT ID 
        FROM CLCN_DB.PHDP_CLOUD.OZONE_CLOSED_NON_COMPLIANT_RESOURCES_V04
    )
),

-- Tier 3 calculations
NON_COMPLIANT_SLA_COUNTS AS (
    SELECT 
        COUNT(DISTINCT RESOURCE_ID) as TOTAL_NON_COMPLIANT,
        COUNT(DISTINCT CASE 
            WHEN (CONTROL_RISK = 'Critical' AND DATEDIFF('days', OPEN_DATE_UTC_TIMESTAMP, CURRENT_DATE) > 0) OR
                 (CONTROL_RISK = 'High' AND DATEDIFF('days', OPEN_DATE_UTC_TIMESTAMP, CURRENT_DATE) > 30) OR
                 (CONTROL_RISK = 'Medium' AND DATEDIFF('days', OPEN_DATE_UTC_TIMESTAMP, CURRENT_DATE) > 60) OR
                 (CONTROL_RISK = 'Low' AND DATEDIFF('days', OPEN_DATE_UTC_TIMESTAMP, CURRENT_DATE) > 90)
            THEN RESOURCE_ID 
        END) as PAST_SLA_COUNT
    FROM CLCN_DB.PHDP_CLOUD.OZONE_NON_COMPLIANT_RESOURCES_TCRD_VIEW_V01
    WHERE CONTROL_ID = 'AC-3.AWS.30.v02'
    AND ID NOT IN (
        SELECT ID 
        FROM CLCN_DB.PHDP_CLOUD.OZONE_CLOSED_NON_COMPLIANT_RESOURCES_V04
    )
)

-- Combined output maintaining original column format for each tier
SELECT 
    CURRENT_DATE() AS DATE,
    'MNTR-1074653-T1' AS MONITORING_METRIC_NUMBER,
    ROUND(100.0 * EVALUATED_RESOURCES / NULLIF(TOTAL_RESOURCES, 0), 2) AS MONITORING_METRIC,
    CASE 
        WHEN (EVALUATED_RESOURCES >= TOTAL_RESOURCES) THEN 'GREEN'
        ELSE 'RED'
    END AS COMPLIANCE_STATUS,
    TO_DOUBLE(ROUND(EVALUATED_RESOURCES, 2)) AS NUMERATOR,
    TO_DOUBLE(ROUND(TOTAL_RESOURCES, 2)) AS DENOMINATOR
FROM COVERAGE_STATS

UNION ALL

SELECT 
    CURRENT_DATE(),
    'MNTR-1074653-T2',
    ROUND(100.0 * (e.TOTAL_EVALUATED - nc.TOTAL_NON_COMPLIANT) / NULLIF(e.TOTAL_EVALUATED, 0), 2),
    CASE 
        WHEN ((e.TOTAL_EVALUATED - nc.TOTAL_NON_COMPLIANT) / NULLIF(e.TOTAL_EVALUATED, 0)) >= 0.95 THEN 'GREEN'
        WHEN ((e.TOTAL_EVALUATED - nc.TOTAL_NON_COMPLIANT) / NULLIF(e.TOTAL_EVALUATED, 0)) >= 0.90 THEN 'YELLOW'
        ELSE 'RED'
    END,
    (e.TOTAL_EVALUATED - nc.TOTAL_NON_COMPLIANT),
    e.TOTAL_EVALUATED
FROM EVALUATED_RESOURCES e
CROSS JOIN NON_COMPLIANT_COUNT nc

UNION ALL

SELECT 
    CURRENT_DATE(),
    'MNTR-1074653-T3',
    ROUND(100.0 * (1 - (CAST(PAST_SLA_COUNT AS DECIMAL(18,2)) / NULLIF(CAST(TOTAL_NON_COMPLIANT AS DECIMAL(18,2)), 0))), 2),
    CASE 
        WHEN (PAST_SLA_COUNT / NULLIF(TOTAL_NON_COMPLIANT, 0)) <= 0.05 THEN 'GREEN'
        WHEN (PAST_SLA_COUNT / NULLIF(TOTAL_NON_COMPLIANT, 0)) <= 0.10 THEN 'YELLOW'
        ELSE 'RED'
    END,
    (TOTAL_NON_COMPLIANT - PAST_SLA_COUNT),
    TOTAL_NON_COMPLIANT
FROM NON_COMPLIANT_SLA_COUNTS

ORDER BY MONITORING_METRIC_NUMBER;
