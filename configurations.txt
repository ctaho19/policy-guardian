WITH MachineStats AS (
    SELECT 
        ASV,
        ACCOUNT_NUMBER,
        SUM(INVENTORY_COUNT) as TOTAL_INVENTORY,
        SUM(TOTAL_EVALUATIONS_COUNT) as TOTAL_EVALUATIONS,
        ROUND(SUM(TOTAL_EVALUATIONS_COUNT) * 100.0 / NULLIF(SUM(INVENTORY_COUNT), 0), 2) as COVERAGE_PERCENTAGE
    FROM (
        SELECT *, 
               ROW_NUMBER() OVER (PARTITION BY ACCOUNT_NUMBER, REGION, ASV, RESOURCE_TYPE ORDER BY BATCH_ID DESC) AS RANK
        FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
        WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
        AND CLOUD_PROVIDER = 'AWS'
        AND ROLE_TYPE = 'MACHINE'
        AND RESOURCE_TYPE = 'AWS::IAM::Role'
        AND INVENTORY_COUNT > 0
        AND LOWER(REGION) IN ('ca-central-1', 'eu-west-1', 'eu-west-2', 'us-east-1', 'us-east-2', 'us-west-2', 'global')
    ) a
    WHERE rank = 1
    GROUP BY ASV, ACCOUNT_NUMBER
    HAVING SUM(INVENTORY_COUNT) > 10  -- Filter out low inventory counts to focus on significant cases
)
SELECT 
    ASV,
    ACCOUNT_NUMBER,
    TOTAL_INVENTORY,
    TOTAL_EVALUATIONS,
    COVERAGE_PERCENTAGE,
    CASE 
        WHEN COVERAGE_PERCENTAGE < 20 THEN 'CRITICAL'
        WHEN COVERAGE_PERCENTAGE < 50 THEN 'LOW'
        WHEN COVERAGE_PERCENTAGE < 80 THEN 'MEDIUM'
        ELSE 'GOOD'
    END as COVERAGE_CATEGORY
FROM MachineStats
ORDER BY COVERAGE_PERCENTAGE ASC, TOTAL_INVENTORY DESC
LIMIT 20;
