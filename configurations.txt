WITH LowCoverageMachine AS (
    -- First get the ASVs/Accounts with low coverage in MACHINE role type
    SELECT 
        ASV,
        ACCOUNT_NUMBER
    FROM (
        SELECT 
            ASV,
            ACCOUNT_NUMBER,
            SUM(INVENTORY_COUNT) as TOTAL_INVENTORY,
            SUM(TOTAL_EVALUATIONS_COUNT) as TOTAL_EVALUATIONS,
            ROUND(SUM(TOTAL_EVALUATIONS_COUNT) * 100.0 / NULLIF(SUM(INVENTORY_COUNT), 0), 2) as COVERAGE_PERCENTAGE
        FROM (
            SELECT *, 
                   ROW_NUMBER() OVER (PARTITION BY ACCOUNT_NUMBER, REGION, ASV, RESOURCE_TYPE ORDER BY BATCH_ID DESC) AS RANK
            FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
            WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
            AND CLOUD_PROVIDER = 'AWS'
            AND ROLE_TYPE = 'MACHINE'
            AND RESOURCE_TYPE = 'AWS::IAM::Role'
            AND INVENTORY_COUNT > 10
        ) a
        WHERE rank = 1
        GROUP BY ASV, ACCOUNT_NUMBER
        HAVING SUM(TOTAL_EVALUATIONS_COUNT) * 100.0 / NULLIF(SUM(INVENTORY_COUNT), 0) < 50  -- Low/Critical coverage
    )
)
SELECT 
    m.ASV,
    m.ACCOUNT_NUMBER,
    m.ROLE_TYPE as ROLE_TYPE,
    m.TOTAL_INVENTORY as MACHINE_INVENTORY,
    m.TOTAL_EVALUATIONS as MACHINE_EVALUATIONS,
    m.COVERAGE_PERCENTAGE as MACHINE_COVERAGE,
    n.TOTAL_INVENTORY as NA_INVENTORY,
    n.TOTAL_EVALUATIONS as NA_EVALUATIONS,
    n.COVERAGE_PERCENTAGE as NA_COVERAGE
FROM (
    -- Get MACHINE stats
    SELECT 
        ASV,
        ACCOUNT_NUMBER,
        'MACHINE' as ROLE_TYPE,
        SUM(INVENTORY_COUNT) as TOTAL_INVENTORY,
        SUM(TOTAL_EVALUATIONS_COUNT) as TOTAL_EVALUATIONS,
        ROUND(SUM(TOTAL_EVALUATIONS_COUNT) * 100.0 / NULLIF(SUM(INVENTORY_COUNT), 0), 2) as COVERAGE_PERCENTAGE
    FROM (
        SELECT *, 
               ROW_NUMBER() OVER (PARTITION BY ACCOUNT_NUMBER, REGION, ASV, RESOURCE_TYPE ORDER BY BATCH_ID DESC) AS RANK
        FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
        WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
        AND CLOUD_PROVIDER = 'AWS'
        AND ROLE_TYPE = 'MACHINE'
        AND RESOURCE_TYPE = 'AWS::IAM::Role'
    ) a
    WHERE rank = 1
    GROUP BY ASV, ACCOUNT_NUMBER
) m
JOIN LowCoverageMachine lc ON m.ASV = lc.ASV AND m.ACCOUNT_NUMBER = lc.ACCOUNT_NUMBER
LEFT JOIN (
    -- Get N/A stats for same ASVs/Accounts
    SELECT 
        ASV,
        ACCOUNT_NUMBER,
        SUM(INVENTORY_COUNT) as TOTAL_INVENTORY,
        SUM(TOTAL_EVALUATIONS_COUNT) as TOTAL_EVALUATIONS,
        ROUND(SUM(TOTAL_EVALUATIONS_COUNT) * 100.0 / NULLIF(SUM(INVENTORY_COUNT), 0), 2) as COVERAGE_PERCENTAGE
    FROM (
        SELECT *, 
               ROW_NUMBER() OVER (PARTITION BY ACCOUNT_NUMBER, REGION, ASV, RESOURCE_TYPE ORDER BY BATCH_ID DESC) AS RANK
        FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
        WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
        AND CLOUD_PROVIDER = 'AWS'
        AND ROLE_TYPE = 'N/A'
        AND RESOURCE_TYPE = 'AWS::IAM::Role'
    ) a
    WHERE rank = 1
    GROUP BY ASV, ACCOUNT_NUMBER
) n ON m.ASV = n.ASV AND m.ACCOUNT_NUMBER = n.ACCOUNT_NUMBER
ORDER BY m.COVERAGE_PERCENTAGE ASC, m.TOTAL_INVENTORY DESC;
