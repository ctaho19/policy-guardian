-- Fixed Tier 1 Query with corrected RANKEDRECORDS logic
WITH LATEST_BATCH AS (
    SELECT MAX(BATCH_ID) AS BATCH_ID 
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
),
RANKEDRECORDS AS (
    SELECT *,
        ROW_NUMBER() OVER (
            PARTITION BY ACCOUNT_NUMBER, REGION, ASV, RESOURCE_TYPE, ROLE_TYPE 
            ORDER BY BATCH_ID DESC
        ) AS RANK
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE BATCH_ID = (SELECT BATCH_ID FROM LATEST_BATCH)
    AND CONTROL_ID = 'AC-3.AWS.30.v02'
    AND RESOURCE_TYPE = 'AWS::IAM::Role'
    AND ROLE_TYPE = 'MACHINE'
    AND INVENTORY_COUNT >= 0
),
RESOURCE_COUNTS AS (
    SELECT 
        SUM(INVENTORY_COUNT) AS TOTAL_RESOURCES,
        SUM(TOTAL_EVALUATIONS_COUNT) AS EVALUATED_RESOURCES
    FROM RANKEDRECORDS
    WHERE RANK = 1
)
SELECT 
    CURRENT_DATE AS DATE,
    'MNTR-XXXXX-T1' AS MONITORING_METRIC_NUMBER,
    ROUND(100.0 * EVALUATED_RESOURCES / NULLIF(TOTAL_RESOURCES, 0), 2) AS MONITORING_METRIC,
    CASE 
        WHEN (EVALUATED_RESOURCES / NULLIF(TOTAL_RESOURCES, 0)) >= 0.9 THEN 'GREEN'
        WHEN (EVALUATED_RESOURCES / NULLIF(TOTAL_RESOURCES, 0)) >= 0.8 THEN 'YELLOW'
        ELSE 'RED'
    END AS COMPLIANCE_STATUS,
    EVALUATED_RESOURCES AS NUMERATOR,
    TOTAL_RESOURCES AS DENOMINATOR
FROM RESOURCE_COUNTS;

-- Validation Query
WITH FIXED_RANKED AS (
    SELECT 
        'FIXED_RANKED' as SOURCE,
        SUM(INVENTORY_COUNT) as TOTAL_RESOURCES,
        SUM(TOTAL_EVALUATIONS_COUNT) as EVALUATED_RESOURCES
    FROM (
        SELECT *,
            ROW_NUMBER() OVER (
                PARTITION BY ACCOUNT_NUMBER, REGION, ASV, RESOURCE_TYPE, ROLE_TYPE
                ORDER BY BATCH_ID DESC
            ) AS RANK
        FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
        WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
        AND CONTROL_ID = 'AC-3.AWS.30.v02'
        AND RESOURCE_TYPE = 'AWS::IAM::Role'
        AND ROLE_TYPE = 'MACHINE'
    ) r
    WHERE RANK = 1
)
SELECT * FROM FIXED_RANKED;
