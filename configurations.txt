-- Tier 2: Compliance Rate
WITH LATEST_BATCHES AS (
    SELECT MAX(BATCH_ID) AS LAZER_BATCH_ID
    FROM CLCN_DB.PHDP_CLOUD.lazer_controls_v03
),
RESOURCE_INVENTORY AS (
    SELECT 
        SUM(INVENTORY_COUNT) AS TOTAL_RESOURCES,
        COUNT(DISTINCT RESOURCE_TYPE) AS RESOURCE_TYPES_COUNT
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE BATCH_ID = (
        SELECT MAX(BATCH_ID) 
        FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    )
    AND CONTROL_ID = '<your_control_id>'
    AND INVENTORY_COUNT >= 0
),
NON_COMPLIANT_RESOURCES AS (
    SELECT 
        COALESCE(COUNT(DISTINCT nc.ID), 0) AS NON_COMPLIANT_COUNT  -- Convert NULL to 0
    FROM CLCN_DB.PHDP_CLOUD.ozone_non_compliant_resource_history_v07_v02 nc
    WHERE nc.CONTROL_ID = '<your_control_id>'
    AND nc.ID NOT IN (
        SELECT ID 
        FROM CLCN_DB.PHDP_CLOUD.OZONE_CLOSED_NON_COMPLIANT_RESOURCES_V04
    )
),
COMPLIANCE_METRICS AS (
    SELECT 
        ri.TOTAL_RESOURCES,
        nc.NON_COMPLIANT_COUNT,
        -- Ensure we don't get negative compliant resources
        ROUND(100.0 * (GREATEST(0, ri.TOTAL_RESOURCES - nc.NON_COMPLIANT_COUNT)) / 
            GREATEST(ri.TOTAL_RESOURCES, nc.NON_COMPLIANT_COUNT), 2) AS RESOURCE_COMPLIANCE_RATE
    FROM RESOURCE_INVENTORY ri
    CROSS JOIN NON_COMPLIANT_RESOURCES nc
)
SELECT 
    CURRENT_DATE AS DATE,
    'MNTR-XXXXX-T2' AS MONITORING_METRIC_NUMBER,
    RESOURCE_COMPLIANCE_RATE AS MONITORING_METRIC,
    CASE 
        WHEN RESOURCE_COMPLIANCE_RATE >= 95.0 THEN 'GREEN'
        WHEN RESOURCE_COMPLIANCE_RATE >= 90.0 THEN 'YELLOW'
        ELSE 'RED'
    END AS COMPLIANCE_STATUS,
    GREATEST(0, TOTAL_RESOURCES - NON_COMPLIANT_COUNT) AS NUMERATOR,
    GREATEST(TOTAL_RESOURCES, NON_COMPLIANT_COUNT) AS DENOMINATOR
FROM COMPLIANCE_METRICS;

-- Supporting Evidence Query for Tier 2
SELECT 
    rd.ACCOUNT_NUMBER,
    rd.REGION,
    rd.ASV,
    rd.RESOURCE_TYPE,
    rd.EVALUATED_COUNT as TOTAL_RESOURCES,
    COALESCE(ncd.NON_COMPLIANT_COUNT, 0) as NON_COMPLIANT_RESOURCES,
    GREATEST(0, rd.EVALUATED_COUNT - COALESCE(ncd.NON_COMPLIANT_COUNT, 0)) as COMPLIANT_RESOURCES,
    ROUND(100.0 * GREATEST(0, rd.EVALUATED_COUNT - COALESCE(ncd.NON_COMPLIANT_COUNT, 0)) / 
        GREATEST(rd.EVALUATED_COUNT, COALESCE(ncd.NON_COMPLIANT_COUNT, 0)), 2) as COMPLIANCE_PERCENTAGE
FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4 rd
LEFT JOIN (
    SELECT 
        ACCOUNT_ID,
        REGION,
        ASV,
        RESOURCE_TYPE,
        COUNT(*) as NON_COMPLIANT_COUNT
    FROM CLCN_DB.PHDP_CLOUD.ozone_non_compliant_resource_history_v07_v02
    WHERE CONTROL_ID = '<your_control_id>'
    AND ID NOT IN (
        SELECT ID 
        FROM CLCN_DB.PHDP_CLOUD.OZONE_CLOSED_NON_COMPLIANT_RESOURCES_V04
    )
    GROUP BY ACCOUNT_ID, REGION, ASV, RESOURCE_TYPE
) ncd 
    ON rd.ACCOUNT_NUMBER = ncd.ACCOUNT_ID
    AND rd.REGION = ncd.REGION
    AND rd.ASV = ncd.ASV
    AND rd.RESOURCE_TYPE = ncd.RESOURCE_TYPE
WHERE rd.BATCH_ID = (
    SELECT MAX(BATCH_ID) 
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
)
AND rd.CONTROL_ID = '<your_control_id>'
ORDER BY 
    rd.REGION,
    rd.ACCOUNT_NUMBER,
    rd.ASV,
    rd.RESOURCE_TYPE;
