-- Step 1: Identify rows with overcounts and calculate raw discrepancies
WITH OVERCOUNT_ROWS AS (
    SELECT 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        CONTROL_COMPONENTS,
        TOTAL_EVALUATIONS_COUNT,
        INVENTORY_COUNT,
        CASE 
            WHEN TOTAL_EVALUATIONS_COUNT > INVENTORY_COUNT 
            THEN TOTAL_EVALUATIONS_COUNT - INVENTORY_COUNT 
            ELSE 0 
        END AS RAW_DISCREPANCY
    FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4
    WHERE BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.OZONE_QUARTERLY_EXAMINER_REVIEW_TOTAL_COUNTS_REPORT_V01_V4)
        AND CLOUD_PROVIDER = 'AWS'
        AND ROLE_TYPE IN ('', 'N/A', 'MACHINE')
        AND CONTROL_ID = '<your_control_id>'
        AND INVENTORY_COUNT > 0
        AND LOWER(REGION) IN ('ca-central-1', 'eu-west-1', 'eu-west-2', 'us-east-1', 'us-east-2', 'us-west-2', 'global')
        AND RESOURCE_TYPE IN (
            SELECT DISTINCT RESOURCE_TYPE
            FROM CLCN_DB.PHDP_CLOUD.LAZER_COMPONENETS_V03 LCOMP 
            JOIN CLCN_DB.PHDP_CLOUD.LAZER_CONTROLS_V03 LCTRL
            USING (CLOUD_CONTROL_VERSION_ID, BATCH_ID)
            WHERE LCTRL.BATCH_ID = (SELECT MAX(BATCH_ID) FROM CLCN_DB.PHDP_CLOUD.LAZER_CONTROLS_V03)
                AND ESCALATING
                AND PHASE = 'OPERATIONAL'
                AND RESOURCE_TYPE NOT ILIKE ''
        )
),

-- Step 2: Aggregate discrepancies by component group (mimicking COMPONENT_EVAL_SUMS)
COMPONENT_DISCREPANCIES AS (
    SELECT 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        CONTROL_COMPONENTS,
        SUM(TOTAL_EVALUATIONS_COUNT) AS COMPONENT_EVAL_SUM,  -- Total evaluations per component
        MAX(INVENTORY_COUNT) AS INVENTORY_COUNT,             -- Consistent inventory count
        SUM(RAW_DISCREPANCY) AS COMPONENT_DISCREPANCY_SUM    -- Sum of discrepancies per component
    FROM OVERCOUNT_ROWS
    GROUP BY 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        CONTROL_COMPONENTS
),

-- Step 3: Calculate averages within components (mimicking COMPONENT_EVAL_AVGS)
COMPONENT_AVG_DISCREPANCIES AS (
    SELECT 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        CONTROL_COMPONENTS,
        COMPONENT_EVAL_SUM,
        INVENTORY_COUNT,
        COMPONENT_DISCREPANCY_SUM,
        COUNT(*) AS COMPONENT_RECORD_COUNT,
        COMPONENT_EVAL_SUM / COUNT(*) AS COMPONENT_EVAL_AVG,           -- Average evaluations
        COMPONENT_DISCREPANCY_SUM / COUNT(*) AS COMPONENT_DISCREPANCY_AVG -- Average discrepancy
    FROM COMPONENT_DISCREPANCIES
    GROUP BY 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        CONTROL_COMPONENTS,
        COMPONENT_EVAL_SUM,
        INVENTORY_COUNT,
        COMPONENT_DISCREPANCY_SUM
),

-- Step 4: Calculate averages across components (mimicking RESOURCE_GROUP_AVGS)
RESOURCE_GROUP_DISCREPANCIES AS (
    SELECT 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE,
        AVG(COMPONENT_EVAL_AVG) AS DEFINITIVE_EVAL_COUNT,          -- Final eval count
        MAX(INVENTORY_COUNT) AS INVENTORY_COUNT,                   -- Final inventory count
        AVG(COMPONENT_DISCREPANCY_AVG) AS DEFINITIVE_DISCREPANCY_AVG -- Average discrepancy across components
    FROM COMPONENT_AVG_DISCREPANCIES
    GROUP BY 
        ACCOUNT_NUMBER,
        REGION,
        ASV,
        RESOURCE_TYPE
),

-- Step 5: Summarize totals and estimate impact
FINAL_ANALYSIS AS (
    SELECT 
        SUM(DEFINITIVE_EVAL_COUNT) AS TOTAL_EVALUATED_RESOURCES,
        SUM(INVENTORY_COUNT) AS TOTAL_INVENTORY_RESOURCES,
        SUM(DEFINITIVE_EVAL_COUNT) - SUM(INVENTORY_COUNT) AS OBSERVED_DIFFERENCE,
        SUM(DEFINITIVE_DISCREPANCY_AVG) AS TOTAL_DISCREPANCY_CONTRIBUTION,
        COUNT(*) AS TOTAL_RESOURCE_GROUPS,
        AVG(DEFINITIVE_DISCREPANCY_AVG) AS AVG_DISCREPANCY_PER_GROUP
    FROM RESOURCE_GROUP_DISCREPANCIES
)

-- Final output
SELECT 
    TOTAL_EVALUATED_RESOURCES,
    TOTAL_INVENTORY_RESOURCES,
    OBSERVED_DIFFERENCE AS DIFFERENCE_EVALUATED_VS_INVENTORY,
    TOTAL_DISCREPANCY_CONTRIBUTION AS ESTIMATED_DISCREPANCY_FROM_OVERCOUNTS,
    TOTAL_RESOURCE_GROUPS,
    AVG_DISCREPANCY_PER_GROUP,
    CASE 
        WHEN ABS(OBSERVED_DIFFERENCE - TOTAL_DISCREPANCY_CONTRIBUTION) < 100 
        THEN 'The discrepancy (~2,000) is likely fully explained by overcounts.'
        ELSE 'The overcounts contribute but may not fully explain the ~2,000 difference.'
    END AS DISCREPANCY_EXPLANATION
FROM FINAL_ANALYSIS;
​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​